name: TechStyle CI

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies (root)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install app runtime dependencies (src/ecommerce)
        run: |
          if [ -f src/ecommerce/requirements.txt ]; then pip install -r src/ecommerce/requirements.txt; fi

      - name: Static format check (black)
        run: |
          pip show black >/dev/null 2>&1 || pip install black
          black --check src tests

      - name: Import order check (isort)
        run: |
          pip show isort >/dev/null 2>&1 || pip install isort
          isort --check-only src tests

      - name: Lint (flake8)
        run: |
          pip show flake8 >/dev/null 2>&1 || pip install flake8
          flake8 src tests

      - name: Lint selective (pylint)
        run: |
          pip show pylint >/dev/null 2>&1 || pip install pylint
          pylint -E src/ecommerce || true

      - name: Security scan (bandit)
        run: |
          pip show bandit >/dev/null 2>&1 || pip install bandit
          bandit -r src/ecommerce -x tests -q

      - name: Dependency vulnerability scan (pip-audit)
        run: |
          pip show pip-audit >/dev/null 2>&1 || pip install pip-audit
          # audit both environments if both files exist
          pip-audit || true
          if [ -f src/ecommerce/requirements.txt ]; then pip-audit -r src/ecommerce/requirements.txt || true; fi

      - name: Run Unit and Integration Tests
        env:
          PYTHONPATH: src
          FLASK_ENV: testing
        run: |
          pytest tests/ -v --tb=short

      - name: Upload coverage (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./.coverage
          if-no-files-found: ignore
